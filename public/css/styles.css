/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties;
.relative {
  position: relative;
}
.line-clamp-1 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}
.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.contents {
  display: contents;
}
.flex {
  display: flex;
}
.hidden {
  display: none;
}
.inline-flex {
  display: inline-flex;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.size-full {
  width: 100%;
  height: 100%;
}
.h-full {
  height: 100%;
}
.min-h-\[72px\] {
  min-height: 72px;
}
.min-h-screen {
  min-height: 100vh;
}
.w-\[512px\] {
  width: 512px;
}
.w-auto {
  width: auto;
}
.w-full {
  width: 100%;
}
.max-w-\[480px\] {
  max-width: 480px;
}
.max-w-\[512px\] {
  max-width: 512px;
}
.max-w-\[960px\] {
  max-width: 960px;
}
.min-w-\[84px\] {
  min-width: 84px;
}
.flex-1 {
  flex: 1;
}
.shrink-0 {
  flex-shrink: 0;
}
.grow {
  flex-grow: 1;
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.cursor-pointer {
  cursor: pointer;
}
.resize-none {
  resize: none;
}
.flex-col {
  flex-direction: column;
}
.flex-row {
  flex-direction: row;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.items-end {
  align-items: flex-end;
}
.items-stretch {
  align-items: stretch;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.rounded-l-none {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-r-0 {
  border-right-style: var(--tw-border-style);
  border-right-width: 0px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-l-0 {
  border-left-style: var(--tw-border-style);
  border-left-width: 0px;
}
.border-none {
  --tw-border-style: none;
  border-style: none;
}
.border-solid {
  --tw-border-style: solid;
  border-style: solid;
}
.border-\[\#3c4753\] {
  border-color: #3c4753;
}
.border-b-\[\#293038\] {
  border-bottom-color: #293038;
}
.bg-\[\#1980e6\] {
  background-color: #1980e6;
}
.bg-\[\#111418\] {
  background-color: #111418;
}
.bg-\[\#293038\] {
  background-color: #293038;
}
.bg-transparent {
  background-color: transparent;
}
.bg-cover {
  background-size: cover;
}
.bg-center {
  background-position: center;
}
.bg-no-repeat {
  background-repeat: no-repeat;
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-\[22px\] {
  font-size: 22px;
}
.text-\[32px\] {
  font-size: 32px;
}
.tracking-\[-0\.015em\] {
  --tw-tracking: -0.015em;
  letter-spacing: -0.015em;
}
.tracking-\[0\.015em\] {
  --tw-tracking: 0.015em;
  letter-spacing: 0.015em;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.text-\[\#9dabb8\] {
  color: #9dabb8;
}
.text-\[\#1980e6\] {
  color: #1980e6;
}
.underline {
  text-decoration-line: underline;
}
.opacity-50 {
  opacity: 50%;
}
.opacity-60 {
  opacity: 60%;
}
.opacity-70 {
  opacity: 70%;
}
.placeholder\:text-\[\#9dabb8\] {
  &::placeholder {
    color: #9dabb8;
  }
}
.checked\:border-\[\#1980e6\] {
  &:checked {
    border-color: #1980e6;
  }
}
.checked\:bg-\[\#1980e6\] {
  &:checked {
    background-color: #1980e6;
  }
}
.checked\:bg-\[image\:--checkbox-tick-svg\] {
  &:checked {
    background-image: --checkbox-tick-svg;
  }
}
.focus\:border-none {
  &:focus {
    --tw-border-style: none;
    border-style: none;
  }
}
.focus\:border-\[\#3c4753\] {
  &:focus {
    border-color: #3c4753;
  }
}
.focus\:ring-0 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-offset-0 {
  &:focus {
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
}
.focus\:outline-0 {
  &:focus {
    outline-style: var(--tw-outline-style);
    outline-width: 0px;
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-border-style: solid;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
    }
  }
}
